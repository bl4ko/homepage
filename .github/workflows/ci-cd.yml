name: CI/CD Pipeline

on:
  push:
    branches: 
      - main

jobs:
  tests_e2e:
    name: Run end-to-end tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run tests
        run: npx playwright test
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  build:
    name: Build and push Docker image
    runs_on: ubuntu-latest  
    needs: test
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: bl4ko/homepage:latest

  # deploy:
  #   name: Deploy to Google Compute Engine
  #   needs: build
  #   runs_on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Setup gcloud CLI
  #       uses: google-github-actions/setup-gcloud@v0.2.0
  #       with:
  #         project_id: ${{ env.PROJECT_ID }}
  #         service_account_key: ${{ secrets.GCE_SA_KEY }}
  #         export_default_credentials: true

  #     - name: Deploy to Google Compute Engine
  #       run: |
  #         gcloud compute ssh ${{ env.GCE_INSTANCE }} \
  #           --zone ${{ env.GCE_ZONE }} \
  #           --command "cd /path/to/your/project && docker-compose down && docker-compose pull && docker-compose up -d" 
