name: Continous Integration
on:
  pull_request:
    branches: [develop, main]
  workflow_dispatch:
jobs:
  eslint:
    name: "Run ESLint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint

  playwright:
    name: "Playwright Tests"
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.42.1@sha256:b2b78a74b04b3cfdf35046c623c49741de35ef67f1b4a21de8e316dbb89fe68e
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@aa08304bd477b800d468db44fe10f6c61f7f7b11 # v42
        with:
          files: |
            package.json
            package-lock.json
            src/**
            tests/**
            **.js
            **.ts

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        if: steps.changed-files.outputs.any_modified == 'true'

      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        if: steps.changed-files.outputs.any_modified == 'true'
        with:
          node-version: 20

      - name: Install dependencies
        if: steps.changed-files.outputs.any_modified == 'true'
        run: npm ci

      - name: Build standalone nextjs
        if: steps.changed-files.outputs.any_modified == 'true'
        run: npm run build

      - name: Set IP for Playwright webServer inside container
        if: steps.changed-files.outputs.any_modified == 'true'
        run: |
          IP=$(hostname -I | awk '{print $1}')
          echo "CI_CONTAINER_URL=http://$IP:3000" >> $GITHUB_ENV

      - name: Set playwright CI variable to true
        if: steps.changed-files.outputs.any_modified == 'true'
        run: echo "CI=true" >> $GITHUB_ENV

      - name: Run your tests
        if: steps.changed-files.outputs.any_modified == 'true'
        run: DEBUG=pw:webserver npm run test:e2e --debug
        env:
          HOME: /root

  scan:
    name: Scan for vulnerabilities with trivy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2
      - name: Build an image from Dockerfile
        run: |
          docker build -t ghcr.io/bl4ko/netbox-ssot:${{ github.sha }} .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "ghcr.io/bl4ko/netbox-ssot:${{ github.sha }}"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"
