name: Continous Integration
on:
  pull_request:
    branches: [develop, main]
  workflow_dispatch:
jobs:
  eslint:
    name: "Run ESLint"
    runs-on: homepage-runners
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint

  playwright:
    name: 'Playwright Tests'
    runs-on: homepage-runners
    container:
      image: mcr.microsoft.com/playwright:v1.40.1
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Build standalone nextjs
        run: npm run build
      - name: Set IP for Playwright webServer inside container
        run: |
          IP=$(hostname -I | awk '{print $1}')
          echo "CI_CONTAINER_URL=http://$IP:3000" >> $GITHUB_ENV
      - name: Run your tests
        run: DEBUG=pw:webserver npm run test:e2e --debug
        env:
          HOME: /root
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
  build:
    name: Build container image
    runs-on: homepage-runners
    container:
      image: gcr.io/kaniko-project/executor:debug
    permissions: # Permissions for GITHUB_TOKEN
      contents: read
      packages: write
    steps:
        - name: Build and push container with Kaniko to ghcr
          run: |
            AUTH=$(echo -n ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} | base64)
            echo "{\"auths\": {\"ghcr.io\": {\"auth\": \"${AUTH}\"}}}" > /kaniko/.docker/config.json

            /kaniko/executor --dockerfile="./Dockerfile" \
            --context="${{ github.repositoryUrl }}#${{ github.sha }}" \
            --destination="ghcr.io/bl4ko/homepage:${{ github.sha }}" \
            --push-retry 5 \
            --image-name-with-digest-file /workspace/image-digest.txt
  scan:
    runs-on: homepage-runners
    needs: build
    container:
      image: aquasec/trivy:latest
    steps:
      - name: Scan image with trivy for vulnerabilities. Fail if there are any critical.
        run: trivy image --exit-code 1 --severity CRITICAL --no-progress "ghcr.io/bl4ko/homepage:${{ github.sha }}"
